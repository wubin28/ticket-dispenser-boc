{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls *.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'`\nfi","output":"TicketDispenserTest.java:9: error: cannot find symbol\n        assertEquals(1, turnNumberOfNewTicket - turnNumberOfPreviousTicket);\n                        ^\n  symbol:   variable turnNumberOfNewTicket\n  location: class TicketDispenserTest\nTicketDispenserTest.java:9: error: cannot find symbol\n        assertEquals(1, turnNumberOfNewTicket - turnNumberOfPreviousTicket);\n                                                ^\n  symbol:   variable turnNumberOfPreviousTicket\n  location: class TicketDispenserTest\n2 errors\n","instructions":"\nThis is an instructor-led exercise with no written instructions.\nYour instructor will explain the exercise.\n","TicketDispenser.java":"public class TicketDispenser {\n    public TurnTicket getTurnTicket()\n    {\n        int newTurnNumber = TurnNumberSequence.getNextTurnNumber();\n        TurnTicket newTurnTicket = new TurnTicket(newTurnNumber);\n\n        return newTurnTicket;\n    }\n}\n","TicketDispenserTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport static org.mockito.Mockito.*;\n\npublic class TicketDispenserTest {\n    \n    @Test\n    public void the_turn_number_of_the_new_ticket_should_be_subsequent_to_the_previous_one() {\n        assertEquals(1, turnNumberOfNewTicket - turnNumberOfPreviousTicket);\n    }\n\n\n\n    //todo the_turn_number_of_the_new_ticket_should_be_subsequent_to_the_previous_one_from_another_dispensor\n}","TurnNumberSequence.java":"public class TurnNumberSequence {\n    private static int _turnNumber = 0;\n\n    public static int getNextTurnNumber()\n    {\n        return _turnNumber++;\n    }\n}\n","TurnTicket.java":"public class TurnTicket {\n    private final int turnNumber;\n\n    public TurnTicket(int turnNumber)\n    {\n        this.turnNumber = turnNumber;\n    }\n\n    public int getTurnNumber()\n    {\n        return turnNumber;\n    }\n}\n"}